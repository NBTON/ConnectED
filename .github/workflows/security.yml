name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * *' # Daily at 6 AM UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run security audit with better-npm-audit
      run: npx better-npm-audit audit
      continue-on-error: true

    - name: CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        config-file: ./.github/codeql-config.yml

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run ESLint with security rules
      run: npx eslint . --ext .js --config .eslintrc.security.js

    - name: Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'ConnectED'
        path: .
        format: 'ALL'

    - name: Upload dependency check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/

  container-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t connected-security-scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: connected-security-scan
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Dockle for Docker image best practices
      uses: goodwithtech/dockle-action@main
      with:
        image: connected-security-scan
        format: sarif
        output: dockle-results.sarif

    - name: Upload Dockle scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dockle-report
        path: dockle-results.sarif
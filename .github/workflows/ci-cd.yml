name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run lint
      run: npm run lint
    
    - name: Run tests
      run: npm test -- --coverage
    
    - name: Check coverage
      run: |
        COVERAGE=$(npm test -- --coverage --silent --coverageReporters=text | grep -oP '^\s*\d+\s*\|\s*\d+\.\d+%' | head -1 | grep -oP '\d+\.\d+%' | sed 's/%//')
        if (( $(echo "$COVERAGE < 40" | bc -l) )); then
          echo "Coverage below 40%: $COVERAGE%"
          exit 1
        fi
        echo "Coverage OK: $COVERAGE%"
    
    - name: Build assets
      run: npm run build

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build assets
      run: npm run build
    
    - name: Deploy to Heroku
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "your-app-name" # Replace with your Heroku app name
        heroku_email: "your-email@example.com"
        appdir: "."
    
    - name: Run health check
      run: |
        sleep 10
        curl -f https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health || exit 1